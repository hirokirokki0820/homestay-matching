<div class="row justify-content-center">
  <%= form_with(model: @post, local: true, class: "mt-4 form-column-width", id: "post-images") do |f| %>

    <%#----- ユーザー名 ------%>
    <div class="mt-3 mb-3 <%= @post.errors.include?(:title) ? "validation_errors" : "" %>">
      <%= f.label :title, class: "form-label fw-bold"%>
      <span class="text-danger">*</span>
      <div class="input-group shadow-sm rounded">
        <span class="input-group-text" id="basic-addon1">
          <i class="bi bi-person-circle"></i>
        </span>
        <%= f.text_field :title, placeholder: "タイトルを入力してください", class: "form-control" %>
      </div>
      <%= render 'layouts/error_messages',class: "invalid-feedback", obj: @post, key: :title %>
    </div>

    <%#----- 本文 ------%>
    <div class="mb-3 <%= @post.errors.include?(:content) ? "validation_errors" : "" %>">
      <%= f.label :content, class: "form-label fw-bold"%>
      <div class="input-group shadow-sm rounded">
        <span class="input-group-text" id="basic-addon1">
          <i class="bi bi-card-text"></i>
        </span>
        <%= f.text_area :content, placeholder: "本文を入力してください", class: "form-control", rows: 15 %>
      </div>
      <%= render 'layouts/error_messages',class: "invalid-feedback", obj: @post, key: :content %>
    </div>

    <%#----- 住所 ------%>
    <div class="mt-3 mb-3 <%= @post.errors.include?(:address) ? "validation_errors" : "" %>">
      <%= f.label :address, class: "form-label fw-bold"%>
      <div class="input-group shadow-sm rounded">
        <span class="input-group-text" id="basic-addon1">
          <i class="bi bi-geo-alt-fill"></i>
        </span>
        <%= f.text_field :address, autofocus: true,placeholder: "住所を入力してください", class: "form-control" %>
      </div>
      <div id="addressHelp" class="form-text text-primary">※住所を入力すると自動で地図(Google Maps)が表示されるようになります</div>
      <%= render 'layouts/error_messages',class: "invalid-feedback", obj: @post, key: :address %>
    </div>

    <%#----- 画像の添付 ------%>
    <div class="mt-3 mb-5 <%= @post.errors.include?(:images) ? "validation_errors" : "" %>">
      <%= f.label :images, '画像(5MBまで、最大アップロード枚数5枚)', class: "form-label fw-bold" %><br>
      <%= f.file_field :images, multiple: true, onchange: "previewImage(this);", accept: "image/jpeg,image/gif,image/png", class: "mb-3", id: "images_upload" %><br>

      <%#----- 選択した画像をプレビュー表示 ------%>
      <span id="preview" class="images-field" alt="画像のプレビュー"></span>
      <label class="images-upload-label text-center" for="images_upload">
        <div>
          <span style="display:inline-block; padding-top: 10px">画像</span><br>
          <i class="bi bi-camera-fill fs-1"></i>
        </div>
      </label>
      <%= render 'layouts/error_messages',class: "invalid-feedback", obj: @post, key: :images %>

      <%#----- 選択した画像をプレビュー表示 ------%>
      <div id="preview" alt="画像のプレビュー"></div>

      <%#----- 現在登録されている画像を表示(チェックしたものを削除) ------%>
      <% if @post.images.present? %><br>
        <span>⇒現在登録されている画像</span>
        <p class="text-danger font09">※削除する場合は画像にチェックしてから更新してください</p>
        <% @post.images.each_with_index do |image, index| %>
          <div class="form-check">
            <%= f.check_box :image_ids, {multiple: true, class: "form-check-input", id: "post-image-check-#{index}"}, image.id, false %>
            <label class="form-check-label" for="post-image-check-<%= index %>">
              <%= image_tag image.variant(resize: "100x100"), class: "mb-2" %>
            </label>
          </div>
        <% end %>
      <% end %>
    </div>

    <%#----- 送信(更新)ボタン ------%>
    <%= f.submit (@post.new_record? ? "投稿する" : "更新する"), class: "btn btn-primary mb-4" %>

  <% end %>
</div>

<%#----- プレビュー表示の JavaScript ------%>
<%= render "preview_image" %>
<script>
  function previewImage(obj){

	for (i = 0; i < obj.files.length; i++) {
      var fileReader = new FileReader();
      fileReader.onload = (function (e) {
        var img = new Image();
        img.src = e.target.result;
        img.width = 100;
        document.getElementById('preview').appendChild(img);
      });
      fileReader.readAsDataURL(obj.files[i]);
	}
}


  // function previewImage(obj){
  //   var preview = document.querySelector('#preview');
  //   var files   = document.querySelector('input[type=file]').files;

  //   function readAndPreview(file) {

  //     // `file.name` が拡張子の基準と一致していることを確認します。
  //     if ( /\.(jpe?g|png|gif)$/i.test(file.name) ) {
  //       var reader = new FileReader();

  //       reader.addEventListener("load", function () {
  //         var image = new Image();
  //         image.height = 100;
  //         image.title = file.name;
  //         image.src = this.result;
  //         image.id = "preview_image";
  //         preview.appendChild( image );
  //       }, false);

  //       reader.readAsDataURL(file);
  //     }

  //   }
  //   // let fileCount = 0;
  //   if (files) {
  //     // for (var i = 0; i < files.length; i++){
  //     [].forEach.call(files, readAndPreview);
  //     // }
  //   }

  // }
</script>
